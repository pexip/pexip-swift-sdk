name: Build and test

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  check_license:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get changed files
        id: files
        uses: tj-actions/changed-files@v35

      - name: Check license headers
        run: |
          ./Scripts/license_headers.sh check "${{ steps.files.outputs.all_changed_files }}"

  lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/realm/swiftlint:0.50.3

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Lint
        run: |
          swiftlint --config .swiftlint-global.yml --strict --reporter github-actions-logging

  test-package:
    runs-on: macos-latest
    
    strategy:
      fail-fast: false
      matrix:
        config:
          - { destination: 'platform=iOS Simulator,name=iPhone 14 Pro,OS=16.2' }
          - { destination: 'platform=macOS,arch=x86_64' }
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build and test
        run: |
          set -o pipefail && xcodebuild \
            -project Examples/Conference/Example.xcodeproj \
            -scheme 'Pexip-Package' \
            -destination '${{ matrix.config.destination }}' \
            clean build test | xcpretty

  build-conference-example:
    runs-on: macos-latest
    
    strategy:
      fail-fast: false
      matrix:
        config:
          - { scheme: 'Example (iOS)', destination: 'platform=iOS Simulator,name=iPhone 14 Pro,OS=16.2' }
          - { scheme: 'Example (macOS)', destination: 'platform=macOS,arch=x86_64' }
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: |
          set -o pipefail && xcodebuild \
            -project Examples/Conference/Example.xcodeproj \
            -scheme '${{ matrix.config.scheme }}' \
            -destination '${{ matrix.config.destination }}' \
            clean build CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY="" CODE_SIGN_ENTITLEMENTS="" | xcpretty

  build-video-filters-example:
    runs-on: macos-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup CocoaPods cache
        uses: actions/cache@v2
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods- 
      - name: Install CocoaPods
        run: pod install --project-directory=Examples/VideoFilters 
      - name: Build
        run: |
          set -o pipefail && arch -x86_64 xcodebuild \
            -workspace Examples/VideoFilters/VideoFiltersExample.xcworkspace \
            -scheme 'VideoFiltersExample' \
            -destination 'platform=iOS Simulator,name=iPhone 14 Pro,OS=16.2' \
            clean build CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY="" | xcpretty
