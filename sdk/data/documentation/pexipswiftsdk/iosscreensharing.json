{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to implement screen sharing on iOS with "},{"type":"strong","inlineContent":[{"type":"text","text":"Pexip Swift SDK"}]},{"type":"text","text":", you will need to utilize "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/replaykit"},{"type":"text","text":" and Broadcast Upload Extension. The extension captures the screen content, controls the sharing and communicates with its containing application using the shared "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/bundleresources\/entitlements\/com_apple_security_application-groups"},{"type":"text","text":"."}]},{"anchor":"Implementation","level":2,"type":"heading","text":"Implementation"},{"anchor":"Create-Broadcast-Upload-Extension-target","level":3,"type":"heading","text":"Create Broadcast Upload Extension target"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In Xcode click "},{"type":"strong","inlineContent":[{"type":"text","text":"File -> New -> Target"}]},{"type":"text","text":" and select "},{"type":"strong","inlineContent":[{"type":"text","text":"Broadcast Upload Extension"}]}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"iOSScreenSharing1.png"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create your new extension target and embed it in your main application. There is no need to include UI Extension since we want to start broadcast session from the app."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"iOSScreenSharing2.png"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select the newly created extension target and add "},{"type":"strong","inlineContent":[{"type":"text","text":"PexipMedia"}]},{"type":"text","text":" framework in the "},{"type":"strong","inlineContent":[{"type":"text","text":"Frameworks and Libraries"}]},{"type":"text","text":" section."}]}]}]},{"anchor":"Add-App-Groups-capability","level":3,"type":"heading","text":"Add App Groups capability"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select main app target in the Xcode project."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open "},{"type":"strong","inlineContent":[{"type":"text","text":"Signing & Capabilities"}]},{"type":"text","text":" tab and add "},{"type":"strong","inlineContent":[{"type":"text","text":"App Groups"}]},{"type":"text","text":" capability."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create new App Group with identifier “group.your_app_bundle_id”."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Repeat the same steps in your Broadcast Upload Extension target."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure that both app and extension targets share the same App Group identifier."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update the provisioning profile for your main app and create a new one for the extension target."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s also important to select “Audio, AirPlay, and Picture in Picture” in "},{"type":"strong","inlineContent":[{"type":"text","text":"Signing & Capabilities -> Background Modes"}]},{"type":"text","text":" of your main app target."}]},{"anchor":"Setup-broadcast-sample-handler","level":3,"type":"heading","text":"Setup broadcast sample handler"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Utilize "},{"type":"reference","isActive":true,"identifier":"https:\/\/pexip.github.io\/pexip-swift-sdk\/frameworks\/ios\/PexipMedia\/documentation\/pexipmedia\/broadcastsamplehandler"},{"type":"text","text":" from "},{"type":"strong","inlineContent":[{"type":"text","text":"PexipMedia"}]},{"type":"text","text":" framework."}]},{"type":"codeListing","syntax":"swift","code":["import ReplayKit","import PexipMedia","","final class SampleHandler: RPBroadcastSampleHandler, BroadcastSampleHandlerDelegate {","    private lazy var handler: BroadcastSampleHandler = {","        let handler = BroadcastSampleHandler(appGroup: \"your_app_group_id\")","        handler.delegate = self","        return handler","    }()","","    \/\/ MARK: - RPBroadcastSampleHandler","","    override func broadcastStarted(withSetupInfo setupInfo: [String: NSObject]?) {","        handler.broadcastStarted()","    }","","    override func broadcastPaused() {","        handler.broadcastPaused()","    }","","    override func broadcastResumed() {","        handler.broadcastResumed()","    }","","    override func broadcastFinished() {","        handler.broadcastFinished()","    }","","    override func processSampleBuffer(","        _ sampleBuffer: CMSampleBuffer,","        with sampleBufferType: RPSampleBufferType","    ) {","        handler.processSampleBuffer(sampleBuffer, with: sampleBufferType)","    }","","    \/\/ MARK: - BroadcastSampleHandlerDelegate","","    func broadcastSampleHandler(","        _ handler: BroadcastSampleHandler,","        didFinishWithError error: Error","    ) {","        \/\/ Finish broadcast with user-friendly message.","        super.finishBroadcastWithError(error)","    }","}"]},{"anchor":"Start-screen-broadcast-in-the-main-app","level":3,"type":"heading","text":"Start screen broadcast in the main app"},{"type":"codeListing","syntax":"swift","code":["import PexipRTC","import PexipMedia","","let mediaConnectionFactory = WebRTCMediaConnectionFactory(logger: DefaultLogger.mediaWebRTC)","","\/\/ 1. Create a new screen media track.","let screenMediaTrack = mediaConnectionFactory.createScreenMediaTrack(","    appGroup: \"your_app_group_id\",","    broadcastUploadExtension: \"your_broadcast_upload_extension_bundle_id\"",")","","\/\/ 2. Start screen capture and send presentation video to all conference participants.","mediaConnection.setScreenMediaTrack(screenMediaTrack)","try await screenMediaTrack.startCapture(withVideoProfile: .presentationHigh)"]},{"anchor":"Subscribe-to-status-updates","level":3,"type":"heading","text":"Subscribe to status updates"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Screen broadcast might be stopped from the iOS control panel or by the system, so it could be useful to subscribe to status updates from the screen media track."}]},{"type":"codeListing","syntax":"swift","code":["var isPresenting = false","","screenMediaTrack.capturingStatus.$isCapturing","    .receive(on: DispatchQueue.main)","    .sink { isCapturing in","        if !isCapturing && isPresenting {","            mediaConnection.setScreenMediaTrack(nil)","        }","","        isPresenting = isCapturing","    }","    .store(in: &cancellables)"]},{"anchor":"Handle-conference-events","level":3,"type":"heading","text":"Handle conference events"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Stop screen capture if presentation has been stolen by another participant."}]},{"type":"codeListing","syntax":"swift","code":["await conference.receiveEvents()","","conference.eventPublisher","    .sink { event in","        do {","            switch event {","            case .presentationStart(let message):","                screenMediaTrack.stopCapture()","                mediaConnection.setScreenMediaTrack(nil)","                try mediaConnection.receivePresentation(true)","            \/\/ ...","            }","        } catch {","            debugPrint(\"Cannot handle conference event, error: \\(error)\")","        }","    }","    .store(in: &cancellables)"]},{"anchor":"Stop-screen-broadcast","level":3,"type":"heading","text":"Stop screen broadcast"},{"type":"codeListing","syntax":"swift","code":["screenMediaTrack.stopCapture()","mediaConnection.setScreenMediaTrack(nil)"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/pexipswiftsdk\/iosscreensharing"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/PexipSwiftSDK\/documentation\/PexipSwiftSDK\/iOSScreenSharing","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Share your iOS screen (from an iPhone or iPad) in a conference call with "},{"type":"strong","inlineContent":[{"type":"text","text":"Pexip Swift SDK"}]},{"type":"text","text":"."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Screen Sharing on iOS","role":"article","modules":[{"name":"Pexip Swift SDK"}]},"hierarchy":{"paths":[["doc:\/\/PexipSwiftSDK\/documentation\/PexipSwiftSDK"]]},"references":{"doc://PexipSwiftSDK/documentation/PexipSwiftSDK":{"role":"collection","title":"Pexip Swift SDK","abstract":[],"identifier":"doc:\/\/PexipSwiftSDK\/documentation\/PexipSwiftSDK","kind":"symbol","type":"topic","url":"\/documentation\/pexipswiftsdk"},"https://pexip.github.io/pexip-swift-sdk/frameworks/ios/PexipMedia/documentation/pexipmedia/broadcastsamplehandler":{"title":"BroadcastSampleHandler","titleInlineContent":[{"type":"text","text":"BroadcastSampleHandler"}],"type":"link","identifier":"https:\/\/pexip.github.io\/pexip-swift-sdk\/frameworks\/ios\/PexipMedia\/documentation\/pexipmedia\/broadcastsamplehandler","url":"https:\/\/pexip.github.io\/pexip-swift-sdk\/frameworks\/ios\/PexipMedia\/documentation\/pexipmedia\/broadcastsamplehandler"},"https://developer.apple.com/documentation/replaykit":{"title":"ReplayKit","titleInlineContent":[{"type":"text","text":"ReplayKit"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/replaykit","url":"https:\/\/developer.apple.com\/documentation\/replaykit"},"https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_security_application-groups":{"title":"App Group","titleInlineContent":[{"type":"text","text":"App Group"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/bundleresources\/entitlements\/com_apple_security_application-groups","url":"https:\/\/developer.apple.com\/documentation\/bundleresources\/entitlements\/com_apple_security_application-groups"},"iOSScreenSharing1.png":{"alt":"Broadcast Upload Extension target","type":"image","identifier":"iOSScreenSharing1.png","variants":[{"url":"\/images\/iOSScreenSharing1~dark.png","traits":["1x","dark"]}]},"iOSScreenSharing2.png":{"alt":"Broadcast Upload Extension dialog","type":"image","identifier":"iOSScreenSharing2.png","variants":[{"url":"\/images\/iOSScreenSharing2~dark.png","traits":["1x","dark"]}]}}}