{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Built-in-filters","level":2,"type":"heading","text":"Built-in filters"},{"anchor":"Person-segmentation","level":3,"type":"heading","text":"Person segmentation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use one of the built-in video filters with the default "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/vision\/vngeneratepersonsegmentationrequest"},{"type":"text","text":", available on iOS 15.0+ and macOS 12.0+:"}]},{"type":"codeListing","syntax":"swift","code":["import PexipRTC","import PexipVideoFilters","","let mediaFactory = WebRTCMediaFactory()","let filterFactory = VideoFilterFactory()","let cameraVideoTrack = mediaFactory.createCameraVideoTrack()","","\/\/ 1. Gaussian blur","cameraVideoTrack?.videoFilter = filterFactory.segmentation(","    background: .gaussianBlur(radius: 30)",")","","\/\/ 2. Tent blur","cameraVideoTrack?.videoFilter = filterFactory.segmentation(","    background: .tentBlur(intensity: 0.3)",")","","\/\/ 3. Box blur","cameraVideoTrack?.videoFilter = filterFactory.segmentation(","    background: .boxBlur(intensity: 0.3)",")","","\/\/ 4. Custom image background","cameraVideoTrack?.videoFilter = filterFactory.segmentation(","    background: .image(UIImage(named: \"background_image\")!.cgImage!)",")    ","","\/\/ 5. Custom video background","cameraVideoTrack?.videoFilter = filterFactory.segmentation(","    background: .video(url: localVideoFileURL)",")","","\/\/ 6. Custom CIFilter","cameraVideoTrack?.videoFilter = filterFactory.customFilter(","    CIFilter.sepiaTone()",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Itâ€™s also possible to inject your custom implementation of "},{"type":"codeVoice","code":"PersonSegmenter"},{"type":"text","text":" protocol,"},{"type":"text","text":" "},{"type":"text","text":"which might be useful if you want to support video filters on older platforms:"}]},{"type":"codeListing","syntax":"swift","code":["import PexipVideoFilters","import MLKit","import MLKitSegmentationSelfie","","final class MLKitPersonSegmenter: PersonSegmenter {","    func personMaskPixelBuffer(from pixelBuffer: CVPixelBuffer) -> CVPixelBuffer? {","        guard let sampleBuffer = sampleBuffer(from: pixelBuffer) else {","            return nil","        }","","        let image = VisionImage(buffer: sampleBuffer)","        image.orientation = imageOrientation()","","        do {","            let mask = try segmenter.results(in: image)","            return mask.buffer","        } catch {","            return nil","        }","    }","}","","cameraVideoTrack?.videoFilter = filterFactory.segmentation(","    segmenter: MLKitPersonSegmenter(),","    background: .gaussianBlur(radius: 30)",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can find the complete source code in our "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/pexip\/pexip-swift-sdk\/tree\/main\/Examples\/VideoFilters"},{"type":"text","text":"."}]},{"anchor":"Custom-filters","level":2,"type":"heading","text":"Custom filters"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement "},{"type":"codeVoice","code":"VideoFilter"},{"type":"text","text":" protocol from "},{"type":"codeVoice","code":"PexipCore"},{"type":"text","text":" framework"}]}]}]},{"type":"codeListing","syntax":"swift","code":["import PexipMedia","","class CustomVideoFilter: VideoFilter {","    func processPixelBuffer(","        _ pixelBuffer: CVPixelBuffer,","        orientation: CGImagePropertyOrientation","    ) -> CVPixelBuffer {","        \/\/ 1. Modify original pixel buffer","        let newPixelBuffer = modify(pixelBuffer, for: orientation)","        \/\/ 2. Return the new pixel buffer","        return newPixelBuffer","    }","}"]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Set the video filter on your instance of "},{"type":"codeVoice","code":"CameraVideoTrack"}]}]}]},{"type":"codeListing","syntax":"swift","code":["let cameraVideoTrack = mediaFactory.createCameraVideoTrack()","cameraVideoTrack?.videoFilter = CustomVideoFilter()"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/pexipswiftsdk\/videofilters"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/PexipSwiftSDK\/documentation\/PexipSwiftSDK\/VideoFilters","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Modify the captured video buffer by applying various video filters."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Video Filters","role":"article","modules":[{"name":"Pexip Swift SDK"}]},"hierarchy":{"paths":[["doc:\/\/PexipSwiftSDK\/documentation\/PexipSwiftSDK"]]},"references":{"https://developer.apple.com/documentation/vision/vngeneratepersonsegmentationrequest":{"title":"Vision Person Segmentation","titleInlineContent":[{"type":"text","text":"Vision Person Segmentation"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/vision\/vngeneratepersonsegmentationrequest","url":"https:\/\/developer.apple.com\/documentation\/vision\/vngeneratepersonsegmentationrequest"},"https://github.com/pexip/pexip-swift-sdk/tree/main/Examples/VideoFilters":{"title":"Video Filters example app","titleInlineContent":[{"type":"text","text":"Video Filters example app"}],"type":"link","identifier":"https:\/\/github.com\/pexip\/pexip-swift-sdk\/tree\/main\/Examples\/VideoFilters","url":"https:\/\/github.com\/pexip\/pexip-swift-sdk\/tree\/main\/Examples\/VideoFilters"},"doc://PexipSwiftSDK/documentation/PexipSwiftSDK":{"role":"collection","title":"Pexip Swift SDK","abstract":[],"identifier":"doc:\/\/PexipSwiftSDK\/documentation\/PexipSwiftSDK","kind":"symbol","type":"topic","url":"\/documentation\/pexipswiftsdk"}}}